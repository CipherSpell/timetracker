services:
  backend:
    container_name: backend
    build:
      context: ./backend 
      dockerfile: Dockerfile 
    ports:
      - "8080:8080"
    # TODO: Replace the hardcoded values with values from .env
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - REDIS_HOST=${REDIS_HOST}
    command: npm start
    depends_on:
      - postgres
      - redis

  landing:
    container_name: landing
    build:
      context: ./landing 
      dockerfile: Dockerfile 
    ports:
      - "3000:${LANDING_PORT}"
    environment:
      - BACKEND_HOST= backend
    command: npm run start
    depends_on:
      - backend

  postgres:
    image: postgres:16.4-alpine
    container_name: postgres_dev
    environment:
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: test
      POSTGRES_DB: timetracker
    ports:
      - "5432:${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data 
      - ./infra/sql/dump.sql:/docker-entrypoint-initdb.d/dump.sql # Auto-import the .sql dump file


  redis:
    image: redis:7.4-alpine
    container_name: redis_dev
    ports:
      - "6379:${REDIS_PORT}"

volumes:
  postgres_data:
